#include <iostream>
using namespace std;

// C++ program for above approach
#include<bits/stdc++.h>
int countSetBits(int n)
{
    // base case
    if (n == 0)
        return 0;
    else
        return 1 + countSetBits(n & (n - 1));
}

int getFirstSetBitPos(int n)
{
    return log2(n & -n);
}
;

int last(int n)
{
    int idx =0;
    while(n!=1)
    {
        n=n>>1;
        idx++;
    }
    
    return idx;
    
}

char* helper(int n)
{
 char c[5];
 c[0] = '0'+countSetBits(n);
 c[2] ='0'+getFirstSetBitPos(n);
 c[4] ='0'+last(n);
 c[1]=c[3]='#';

 char* k =c;
 return k;
    
}

int main() {
    
  int input1 =1;
	 char* k =helper(input1);
	 cout<<*(k+2);
}
